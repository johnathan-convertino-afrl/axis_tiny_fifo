CAPI=2:

name: AFRL:buffer:axis_tiny_fifo:1.0.0
description: An axis fifo for very specific, and small applications only. Increasing the size of this will increase gate complexity exponentially.

filesets:
  src:
    files:
      - src/axis_tiny_fifo.v : { file_type: verilogSource }
  
  tb:
    files:
      - tb/tb_axis.v  : { file_type: verilogSource }

  tb_cocotb:
    files:
      - tb/tb_axis_tiny_fifo_cocotb.v : { file_type: verilogSource }
      - tb/tb_axis_tiny_fifo.py : {file_type : user, copyto : .}

  dep:
    depend:
      - AFRL:utility:helper:1.0.0
    
  dep_tb:
    depend:
      - AFRL:simulation:axis_stimulator
      - AFRL:simulation:clock_stimulator
      - AFRL:utility:sim_helper
    
targets:
  default: &default
    description: Default for IP intergration.
    toplevel: axis_tiny_fifo
    filesets: [src, dep]
    
  sim: &sim
    <<: *default
    description: Constant data value with file check.
    default_tool: icarus
    toplevel: tb_axis
    hooks:
      post_run: ["tool_icarus ? (file_check_icarus)"]
    filesets_append: [tb, dep_tb]
    parameters:
      - IN_FILE_NAME
      - OUT_FILE_NAME
      - RAND_READY
      - FIFO_DEPTH
  
  sim_rand_data:
    <<: *sim
    description: Feed random data input with file check
    parameters:
      - IN_FILE_NAME=random.bin
      - OUT_FILE_NAME=out_random.bin
      - RAND_READY
      - FIFO_DEPTH
      
  sim_rand_ready_rand_data:
    <<: *sim
    description: Feed random data input, and randomize the read ready on the output. Perform output file check.
    parameters:
      - IN_FILE_NAME=random.bin
      - OUT_FILE_NAME=out_random.bin
      - RAND_READY=1
      - FIFO_DEPTH
      
  sim_8bit_count_data:
    <<: *sim
    description: Feed a counter data as input, perform file check.
    parameters:
      - IN_FILE_NAME=8bit_count.bin
      - OUT_FILE_NAME=out_8bit_count.bin
      - RAND_READY
      - FIFO_DEPTH
  
  sim_rand_ready_8bit_count_data:
    <<: *sim
    description: Feed a counter data a input, and randomize the read ready on the output. Perform output file check.
    parameters:
      - IN_FILE_NAME=8bit_count.bin
      - OUT_FILE_NAME=out_8bit_count.bin
      - RAND_READY=1
      - FIFO_DEPTH

  sim_cocotb:
    <<: *default
    description: Cocotb unit test
    flow: sim
    flow_options:
      tool: icarus
      cocotb_module: tb_axis_tiny_fifo
      timescale: 1ns/1ns
      vcs_options: [-timescale=1ns/1ns]
    filesets_append: [tb_cocotb]
    toplevel: tb_axis_tiny_fifo_cocotb
    parameters:
      - FIFO_DEPTH
      - BUS_WIDTH
      
parameters:
  RAND_READY:
    datatype    : int
    default     : 0
    description : If set to anything other than 0, the ready signal to the DUT will be randomized.
    paramtype   : vlogparam

  FIFO_DEPTH:
    datatype    : int
    default     : 8
    description : Depth of the FIFO for testing
    paramtype   : vlogparam
    
  IN_FILE_NAME:
    datatype    : file
    default     : const_data.bin
    description : input file name
    paramtype   : vlogparam

  OUT_FILE_NAME:
    datatype    : file
    default     : out_const_data.bin
    description : output file name
    paramtype   : vlogparam

  BUS_WIDTH:
    datatype    : int
    default     : 8
    description : axi streaming data bus size in bytes.
    paramtype   : vlogparam

    
scripts:
  file_check_icarus:
    cmd : [python3, file_check.py, icarus]
